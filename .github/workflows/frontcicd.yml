name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend-build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Front  
  
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
  
      - name: Install dependencies
        run: npm ci
  
      - name: Run Angular unit tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
  
      - name: Build Angular app
        run: npm run build

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: sanalyz
          POSTGRES_PASSWORD: sanalyz
          POSTGRES_DB: sanalyz
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Run tests
        run: |
          chmod +x ./mvnw
          ./mvnw test
  owasp-zap:
    permissions: write-all
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: sanalyz
          POSTGRES_PASSWORD: sanalyz
          POSTGRES_DB: sanalyz
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Start the application
        run: |
          chmod +x ./mvnw
          nohup ./mvnw spring-boot:run &
          echo "Waiting for the application to start..."
          sleep 30
      - name: Run OWASP ZAP
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://localhost:8080"
          rules_file_name: ".zap/rules.tsv"
          docker_name: zaproxy/zap-stable
          fail_action: true
      - name: Stop the application
        run: |
          echo "Stopping the application..."
          pkill -f 'spring-boot:run'

      - name: Copy Angular build to backend resources
        run: |
          cp -r ./Front/src/app/* ../API/src/main/resources/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} 
          publish_dir: ./Front/*

  gh-pages-deploy:
    runs-on: ubuntu-latest
    needs: frontend-build-and-test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Build Angular app
        run: |
          cd Front
          npm ci
          npm run build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./Front/dist/Sanalyz

  deploy:
    runs-on: ubuntu-latest
    needs: [test, owasp-zap, frontend-build-and-test, gh-pages-deploy]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./Front/dist/<Sanalyz>
